#!/usr/bin/env ruby

require 'erb'
require 'fileutils'
require "#{File.join(File.dirname(__FILE__), '..', 'lib', 'github')}"

build_dir    = ARGV[0]
cache_dir    = ARGV[1]
github_token = ENV['GITHUB_AUTH_TOKEN']

if github_token.nil?
  puts "       !!!! GITHUB_AUTH_TOKEN not set"
  puts "       !!!!   Try `heroku config:add GITHUB_AUTH_TOKEN=<my token>`"
  puts "       !!!!   See http://developer.github.com/v3/oauth/#non-web-application-flow"
  exit 1
end

##
# Tell `curl` on the BUILD machine (not in slug) to use ~/.netrc
File.open "#{ENV['HOME']}/.curlrc", "w+", 0600 do |f|
  f.puts "-H 'Authorization: Bearer #{ENV['GITHUB_AUTH_TOKEN']}'"
end

if valid_login?
  puts "       Generated .curlrc file (available only at build-time)"

  ##
  # Remove $GITHUB_AUTH_TOKEN from runtime environment at slug boot time.
  FileUtils.mkdir_p "#{build_dir}/.profile.d"
  File.open "#{build_dir}/.profile.d/netrc.sh", "w+", 0600 do |f|
    f.puts "unset GITHUB_AUTH_TOKEN"
  end

  ##
  # Print out user information
  puts user_block(ENV['GITHUB_AUTH_TOKEN'])
else
  puts "       !!!! No valid Github user found with GITHUB_AUTH_TOKEN: '#{ENV['GITHUB_AUTH_TOKEN']}'"
  exit 1
end
